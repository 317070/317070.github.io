{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte",
    "../src/Chart.svelte"
  ],
  "sourcesContent": [
    "<script>\n  \n  import { scaleLinear } from \"d3-scale\";\n  // import { Date } from \"d3-time\"\n  import Chart from './Chart.svelte';\n  import { onMount } from 'svelte';\n  import { selectAll } from 'd3-selection'\n  import { drag } from 'd3-drag';\n  import queryString from \"query-string\";\n  import Checkbox from './Checkbox.svelte';\n  import Arrow from './Arrow.svelte';\n  import { format } from 'd3-format'\n  import { event } from 'd3-selection'\n\n  import katex from 'katex';\n\n  const legendheight = 67 \n\n  function range(n){\n    return Array(n).fill().map((_, i) => i);\n  }\n\n  function formatNumber(num) {\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n  }\n\n  var sum = function(arr, bools){\n    var x = 0\n    for (var i = 0; i < arr.length; i++) {\n      x = x + arr[i]*(bools[i] ? 1 : 0)\n    }\n    return x\n  }\n\n  var Integrators = {\n    Euler    : [[1]],\n    Midpoint : [[.5,.5],[0, 1]],\n    Heun     : [[1, 1],[.5,.5]],\n    Ralston  : [[2/3,2/3],[.25,.75]],\n    K3       : [[.5,.5],[1,-1,2],[1/6,2/3,1/6]],\n    SSP33    : [[1,1],[.5,.25,.25],[1/6,1/6,2/3]],\n    SSP43    : [[.5,.5],[1,.5,.5],[.5,1/6,1/6,1/6],[1/6,1/6,1/6,1/2]],\n    RK4      : [[.5,.5],[.5,0,.5],[1,0,0,1],[1/6,1/3,1/3,1/6]],\n    RK38     : [[1/3,1/3],[2/3,-1/3,1],[1,1,-1,1],[1/8,3/8,3/8,1/8]]\n  };\n\n  // f is a func of time t and state y\n  // y is the initial state, t is the time, h is the timestep\n  // updated y is returned.\n  var integrate=(m,f,y,t,h)=>{\n    for (var k=[],ki=0; ki<m.length; ki++) {\n      var _y=y.slice(), dt=ki?((m[ki-1][0])*h):0;\n      for (var l=0; l<_y.length; l++) for (var j=1; j<=ki; j++) _y[l]=_y[l]+h*(m[ki-1][j])*(k[ki-1][l]);\n      k[ki]=f(t+dt,_y,dt); \n    }\n    for (var r=y.slice(),l=0; l<_y.length; l++) for (var j=0; j<k.length; j++) r[l]=r[l]+h*(k[j][l])*(m[ki-1][j]);\n    return r;\n  }\n\n  $: country           = \"Belgium\"\n\n  $: logN              = Math.log(11515790)\n  $: N                 = Math.exp(logN)\n  $: I0                = 31\n  $: R0                = 3.3\n  $: InterventionTime  = 100  \n  $: OMInterventionAmt = 0.7\n  $: InterventionAmt   = 1 - OMInterventionAmt\n  $: Time              = 220\n  $: Xmax              = 110000\n  $: dt                = 4\n  \n  $: duration          = 7*12*1e10  // deprecate\n  \n  $: N_ICU             = 1950 * 1e5 / N \n  \n  $: P_symptoms        = 0.6\n  $: P_hospital        = 0.15\n  $: P_ICU             = 1/6.5\n  $: P_die_in_ICU      = 0.4\n  $: P_die_in_hospital = 0.0\n\n  $: D_to_asym         = 5\n  $: D_to_symptoms     = 2\n  $: D_to_hospital     = 7\n  $: D_to_ICU          = 3.5\n  $: D_to_death        = 4 / Math.log(2) // median\n\n  $: D_recov_asym      = 14\n  $: D_recov_symptoms  = 14\n  $: D_recov_ICU       = 21 //3/ Math.log(2) // median\n  $: D_recov_hospital  = 21\n\n  $: state = location.protocol + '//' + location.host + location.pathname + \"?\" + queryString.stringify({\n   \"Country\":country,\n   \"logN\":logN.toFixed(2),\n   \"I0\":I0.toFixed(2),\n   \"R0\":R0.toFixed(2),\n   \"InterventionTime\":InterventionTime.toFixed(2),\n   \"InterventionAmt\":InterventionAmt.toFixed(2),\n   \"N_ICU\":N_ICU.toFixed(2),\n   \"P_symptoms\": P_symptoms.toFixed(2),\n   \"P_hospital\": P_hospital.toFixed(2),\n   \"P_ICU\": P_ICU.toFixed(2),\n   \"P_die_in_ICU\": P_die_in_ICU.toFixed(2),\n   \"P_die_in_hospital\": P_die_in_hospital.toFixed(2),\n   \"D_to_asym\": D_to_asym.toFixed(2),\n   \"D_to_symptoms\": D_to_symptoms.toFixed(2),\n   \"D_to_hospital\": D_to_hospital.toFixed(2),\n   \"D_to_ICU\": D_to_ICU.toFixed(2),\n   \"D_to_death\": D_to_death.toFixed(2),\n   \"D_recov_asym\": D_recov_asym.toFixed(2),\n   \"D_recov_symptoms\": D_recov_symptoms.toFixed(2),\n   \"D_recov_ICU\": D_recov_ICU.toFixed(2),\n   \"D_recov_hospital\": D_recov_hospital.toFixed(2),\n  })\n\n\n  function get_solution(dt, N, I0, R0, P_symptoms, P_hospital, P_ICU, P_die_in_ICU, P_die_in_hospital, D_to_asym, D_to_symptoms, D_to_hospital, D_to_ICU, D_to_death, D_recov_asym, D_recov_symptoms, D_recov_ICU, D_recov_hospital, N_ICU, InterventionTime, InterventionAmt) {\n\n    var interpolation_steps = 40\n    var steps = 110*interpolation_steps\n    var dt = dt/interpolation_steps\n    var sample_step = interpolation_steps\n\n    var method = Integrators[\"RK4\"]\n    /*function f(t, x){\n\n      // SEIR ODE\n      if (t > InterventionTime && t < InterventionTime + duration){\n        var beta = (InterventionAmt)*R0/(D_infectious)\n      } else if (t > InterventionTime + duration) {\n        var beta = 0.5*R0/(D_infectious)        \n      } else {\n        var beta = R0/(D_infectious)\n      }\n      var a     = 1/D_incubation\n      var gamma = 1/D_infectious\n      \n      var S        = x[0] // Susectable\n      var E        = x[1] // Exposed\n      var I        = x[2] // Infectious \n      var Mild     = x[3] // Recovering (Mild)     \n      var Severe   = x[4] // Recovering (Severe at home)\n      var Severe_H = x[5] // Recovering (Severe in hospital)\n      var Fatal    = x[6] // Recovering (Fatal)\n      var R_Mild   = x[7] // Recovered\n      var R_Severe = x[8] // Recovered\n      var R_Fatal  = x[9] // Dead\n\n      var p_severe = P_SEVERE\n      var p_fatal  = CFR\n      var p_mild   = 1 - P_SEVERE - CFR\n\n      var dS        = -beta*I*S\n      var dE        =  beta*I*S - a*E\n      var dI        =  a*E - gamma*I\n      var dMild     =  p_mild*gamma*I   - (1/D_recovery_mild)*Mild\n      var dSevere   =  p_severe*gamma*I - (1/D_hospital_lag)*Severe\n      var dSevere_H =  (1/D_hospital_lag)*Severe - (1/D_recovery_severe)*Severe_H\n      var dFatal    =  p_fatal*gamma*I  - (1/D_death)*Fatal\n      var dR_Mild   =  (1/D_recovery_mild)*Mild\n      var dR_Severe =  (1/D_recovery_severe)*Severe_H\n      var dR_Fatal  =  (1/D_death)*Fatal\n\n      //      0   1   2   3      4        5          6       7        8          9\n      return [dS, dE, dI, dMild, dSevere, dSevere_H, dFatal, dR_Mild, dR_Severe, dR_Fatal]\n    }*/\n    function f(t, x){\n\n      // SEIR ODE\n      if (t > InterventionTime){\n        var beta = (InterventionAmt)*R0/(D_to_symptoms+D_recov_symptoms)\n      } else {\n        var beta = R0/(D_to_symptoms+D_recov_symptoms)\n      }\n      if (true){  // correction if days are median instead of average\n\t\t  var crct = Math.log(2)\n\t  } else {\n\t\t  var crct = 1\n\t  }\n\t  var eps = 1e-1\n      \n      var r_ea  = crct/D_to_asym\n      \n      var D_recov_asym = D_to_symptoms\n      \n      var r_ai  = crct/D_to_symptoms\n      var r_aw  = crct/D_to_symptoms * (1-P_symptoms) / P_symptoms\n      var r_wr  = crct/Math.max(eps, D_recov_asym - D_to_symptoms * P_symptoms / (1-P_symptoms))\n      var r_ad  = 0\n      \n      var r_ih  = crct/D_to_hospital\n      var r_ix  = crct/D_to_hospital * (1-P_hospital)/P_hospital\n      var r_xr  = crct/Math.max(eps, D_recov_symptoms - D_to_hospital * P_hospital / (1-P_hospital))\n      var r_id  = 0\n      \n      var r_hj  = crct/D_to_ICU\n      var r_hy  = crct/D_to_ICU * (1-P_ICU)/P_ICU\n      var r_yr  = crct/Math.max(eps, D_recov_hospital - D_to_ICU * P_ICU / (1-P_ICU))\n      var r_hd  = 0\n      \n      var r_jd  = crct/D_to_death\n      var r_jz  = crct/D_to_death * (1-P_die_in_ICU)/P_die_in_ICU\n      var r_zr  = crct/Math.max(eps, D_recov_ICU - D_to_death * P_die_in_ICU / (1-P_die_in_ICU))\n      \n      var S        = x[0] // Susceptable\n      var E        = x[1] // Exposed\n      var A        = x[2] // Infectious \n      var W        = x[3] // Infectious \n      var I        = x[4] // Infectious \n      var X        = x[5] // Infectious \n      var H        = x[6] // Hospital\n      var Y        = x[7] // Hospital\n      var J        = x[8] // ICU\n      var Z        = x[9] // ICU\n      var R_A      = x[10] // Recovering (Mild)     \n      var R_I      = x[11] // Recovering (Mild)     \n      var R_H      = x[12] // Recovering (Hospital)\n      var R_J      = x[13] // Recovering (Hospital)\n      var D_A      = x[14] // Dead (Mild)\n      var D_I      = x[15] // Dead (Mild)\n      var D_H      = x[16] // Dead (Hospital)\n      var D_J      = x[17] // Dead (ICU)\n\n\n      var dS       = -beta*(A+I+H+J+W+X+Y+Z)*S\n      var dE       = beta*(A+I+H+J+W+X+Y+Z)*S - r_ea * E\n      var dA       = r_ea * E - (r_ai+r_aw+r_ad)*A\n      var dW       = r_aw * A - r_wr*W\n      var dI       = r_ai * A - (r_ih+r_ix+r_id)*I\n      var dX       = r_ix * I - r_xr*X\n      var dH       = r_ih * I - (r_hj+r_hy+r_hd)*H\n      var dY       = r_hy * H - r_yr*Y\n      var dJ       = r_hj * H - (r_jd+r_jz)*J\n      var dZ       = r_jz * J - r_zr*Z\n      \n      var dR_A     = r_wr*W\n      var dR_I     = r_xr*X\n      var dR_H     = r_yr*Y\n      var dR_J     = r_zr*Z\n      \n      var dD_A     = r_ad*A\n      var dD_I     = r_id*I\n      var dD_H     = r_hd*H\n      var dD_J     = r_jd*J\n      \n      if (N*(J+Z) >= N_ICU*N/1e5) {\n\t\tif (dJ+dZ > 0){\n\t\t\tdD_H = dJ+dZ\n\t\t\tdJ = 0\n\t\t\tdZ = 0\n\t\t}\t\n\t  }\n\t  \n      //      0   1   2   3   4   5   6   7   8   9   10    11    12    13    14    15    16    17\n      return [dS, dE, dA, dW, dI, dX, dH, dY, dJ, dZ, dR_A, dR_I, dR_H, dR_J, dD_A, dD_I, dD_H, dD_J]\n    }\n\n    var v = [1 - I0/N, 0, I0/N*(1-P_symptoms), 0, I0/N*P_symptoms, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    var t = 0\n\n    var P  = []\n    var TI = []\n    var Iters = []\n    var Plotting = []\n    var dPlotting = []\n    while (steps--) { \n      if ((steps+1) % (sample_step) == 0) {\n            //    Dead                        ICU            Hospital       Recovered                    Sick           Infectious\n        P.push([ N*(v[14]+v[15]+v[16]+v[17]), N*(v[8]+v[9]), N*(v[6]+v[7]), N*(v[10]+v[11]+v[12]+v[13]), N*(v[4]+v[5]), N*(v[2] + v[3]) ])\n        Iters.push(v)\n        TI.push(N*(1-v[0]))\n        //console.log((v[0] + v[1] + v[2] + v[3] + v[4] + v[5] + v[6] + v[7] + v[8] + v[9] + v[10] + v[11] + v[12] + v[13] + v[14] + v[15] + v[16]+ v[17]))\n        //console.log(v[0] , v[1] , v[2] , v[3] , v[4] , v[5] , v[6] , v[7] , v[8] , v[9] , v[10] , v[11] , v[12] , v[13] , v[14] , v[15] , v[16]+ v[17])\n      }\n      v =integrate(method,f,v,t,dt); \n      t+=dt\n    }\n    return {\"P\": P, \n            \"deaths\": N*(v[14]+v[15]+v[16]+v[17]), \n            \"total\": 1-v[0],\n            \"total_infected\": TI,\n            \"Iters\":Iters,\n            \"Plotting\":Plotting,\n            \"dIters\": f}\n  }\n\n  function max(P, checked) {\n    return P.reduce((max, b) => Math.max(max, sum(b, checked) ), sum(P[0], checked) )\n  }\n\n  $: Sol            = get_solution(dt, N, I0, R0, P_symptoms, P_hospital, P_ICU, P_die_in_ICU, P_die_in_hospital, D_to_asym, D_to_symptoms, D_to_hospital, D_to_ICU, D_to_death, D_recov_asym, D_recov_symptoms, D_recov_ICU, D_recov_hospital, N_ICU, InterventionTime, InterventionAmt)\n  $: P              = Sol[\"P\"].slice(0,100)\n  $: timestep       = dt\n  $: tmax           = dt*100\n  $: deaths         = Sol[\"deaths\"]\n  $: total          = Sol[\"total\"]\n  $: total_infected = Sol[\"total_infected\"].slice(0,100)\n  $: Iters          = Sol[\"Iters\"]\n  $: dIters         = Sol[\"dIters\"]\n  $: Plotting       = Sol[\"Plotting\"]\n  $: Pmax           = max(P, checked)\n  $: lock           = false\n\n  var colors = [ \"#386cb0\", \"#aa0086\", \"#8da0cb\", \"#4daf4a\", \"#f0027f\", \"#fdc086\"]\n\n  var Plock = 1\n\n  var drag_y = function (){\n    var dragstarty = 0\n    var Pmaxstart = 0\n\n    var dragstarted = function (d) {\n      dragstarty = event.y  \n      Pmaxstart  = Pmax\n    }\n\n    var dragged = function (d) {\n      Pmax = Math.max( (Pmaxstart*(1 + (event.y - dragstarty)/500)), 10)\n    }\n\n    return drag().on(\"drag\", dragged).on(\"start\", dragstarted)\n  }\n\n  var drag_x = function (){\n    var dragstartx = 0\n    var dtstart = 0\n    var Pmaxstart = 0\n    var dragstarted = function (d) {\n      dragstartx = event.x\n      dtstart  = dt\n      Plock = Pmax\n      lock = true\n    }\n    var dragged = function (d) {\n      dt = dtstart - 0.0015*(event.x - dragstartx)\n    }\n    var dragend = function (d) {\n      lock = false\n    }\n    return drag().on(\"drag\", dragged).on(\"start\", dragstarted).on(\"end\", dragend)\n  }\n\n  var drag_intervention = function (){\n    var dragstarty = 0\n    var InterventionTimeStart = 0\n\n    var dragstarted = function (d) {\n      dragstarty = event.x  \n      InterventionTimeStart = InterventionTime\n      Plock = Pmax\n      lock = true\n    }\n\n    var dragged = function (d) {\n      // InterventionTime = Math.max( (*(1 + (event.x - dragstarty)/500)), 10)\n      // console.log(event.x)\n      InterventionTime = Math.min(tmax-1, Math.max(0, InterventionTimeStart + xScaleTimeInv(event.x - dragstarty)))\n    }\n\n    var dragend = function (d) {\n      lock = false\n    }\n\n    return drag().on(\"drag\", dragged).on(\"start\", dragstarted).on(\"end\", dragend)\n  }\n\n\n  var drag_intervention_end = function (){\n    var dragstarty = 0\n    var durationStart = 0\n\n    var dragstarted = function (d) {\n      dragstarty = event.x  \n      durationStart = duration\n      Plock = Pmax\n      lock = true\n    }\n\n    var dragged = function (d) {\n      // InterventionTime = Math.max( (*(1 + (event.x - dragstarty)/500)), 10)\n      // console.log(event.x)\n      duration = Math.min(tmax-1, Math.max(0, durationStart + xScaleTimeInv(event.x - dragstarty)))\n    }\n\n    var dragend = function (d) {\n      lock = false\n    }\n\n    return drag().on(\"drag\", dragged).on(\"start\", dragstarted).on(\"end\", dragend)\n  }\n\n\n  $: parsed = \"\";\n  onMount(async () => {\n    var drag_callback_y = drag_y()\n    drag_callback_y(selectAll(\"#yAxisDrag\"))\n    var drag_callback_x = drag_x()\n    drag_callback_x(selectAll(\"#xAxisDrag\"))\n    var drag_callback_intervention = drag_intervention()\n    // drag_callback_intervention(selectAll(\"#interventionDrag\"))\n    drag_callback_intervention(selectAll(\"#dottedline\"))\n    // var drag_callback_intervention_end = drag_intervention_end()\n    // drag_callback_intervention_end(selectAll(\"#dottedline2\"))\n\n    if (typeof window !== 'undefined') {\n      parsed = queryString.parse(window.location.search)\n      if (!(parsed.logN === undefined)) {logN = parseFloat(parsed.logN)}\n      if (!(parsed.I0 === undefined)) {I0 = parseFloat(parsed.I0)}\n      if (!(parsed.R0 === undefined)) {R0 = parseFloat(parsed.R0)}\n      if (!(parsed.InterventionTime === undefined)) {InterventionTime = parseFloat(parsed.InterventionTime)}\n      if (!(parsed.InterventionAmt === undefined)) {InterventionAmt = parseFloat(parsed.InterventionAmt)}\n      if (!(parsed.N_ICU === undefined)) {N_ICU = parseFloat(parsed.N_ICU)}\n      if (!(parsed.P_symptoms === undefined)) {P_symptoms = parseFloat(parsed.P_symptoms)}\n      if (!(parsed.P_hospital === undefined)) {P_hospital = parseFloat(parsed.P_hospital)}\n      if (!(parsed.P_ICU === undefined)) {P_ICU = parseFloat(parsed.P_ICU)}\n      if (!(parsed.P_die_in_ICU === undefined)) {P_die_in_ICU = parseFloat(parsed.P_die_in_ICU)}\n      if (!(parsed.P_die_in_hospital === undefined)) {P_die_in_hospital = parseFloat(parsed.P_die_in_hospital)}\n      if (!(parsed.D_to_asym === undefined)) {D_to_asym = parseFloat(parsed.D_to_asym)}\n      if (!(parsed.D_to_symptoms === undefined)) {D_to_symptoms = parseFloat(parsed.D_to_symptoms)}\n      if (!(parsed.D_to_hospital === undefined)) {D_to_hospital = parseFloat(parsed.D_to_hospital)}\n      if (!(parsed.D_to_ICU === undefined)) {D_to_ICU = parseFloat(parsed.D_to_ICU)}\n      if (!(parsed.D_to_death === undefined)) {D_to_death = parseFloat(parsed.D_to_death)}\n      if (!(parsed.D_recov_asym === undefined)) {D_recov_asym = parseFloat(parsed.D_recov_asym)}\n      if (!(parsed.D_recov_symptoms === undefined)) {D_recov_symptoms = parseFloat(parsed.D_recov_symptoms)}\n      if (!(parsed.D_recov_ICU === undefined)) {D_recov_ICU = parseFloat(parsed.D_recov_ICU)}\n      if (!(parsed.D_recov_hospital === undefined)) {D_recov_hospital = parseFloat(parsed.D_recov_hospital)}\n      if (!(parsed.country === undefined)) {country = parsed.country}\n    }\n  });\n\n  function lock_yaxis(){\n    Plock = Pmax\n    lock  = true\n  }\n\n  function unlock_yaxis(){\n    lock = false\n  }\n\n  const padding = { top: 20, right: 0, bottom: 20, left: 25 };\n\n  let width  = 750;\n  let height = 400;\n\n  $: xScaleTime = scaleLinear()\n    .domain([0, tmax])\n    .range([padding.left, width - padding.right]);\n\n  $: xScaleTimeInv = scaleLinear()\n    .domain([0, width])\n    .range([0, tmax]);\n\n  $: indexToTime = scaleLinear()\n    .domain([0, P.length])\n    .range([0, tmax])\n\n  window.addEventListener('mouseup', unlock_yaxis);\n\n  $: checked = [true, true, true, false, true, true]\n  $: active  = 0\n  $: active_ = active >= 0 ? active : Iters.length - 1\n\n  var Tinc_s = \"\\\\color{#CCC}{T^{-1}_{\\\\text{inc}}} \"\n  var Tinf_s = \"\\\\color{#CCC}{T^{-1}_{\\\\text{inf}}}\"\n  var Rt_s   = \"\\\\color{#CCC}{\\\\frac{\\\\mathcal{R}_{t}}{T_{\\\\text{inf}}}} \"\n  $: ode_eqn = katex.renderToString(\"\\\\frac{d S}{d t}=-\" +Rt_s +\"\\\\cdot IS,\\\\qquad \\\\frac{d E}{d t}=\" +Rt_s +\"\\\\cdot IS- \" + Tinc_s + \" E,\\\\qquad \\\\frac{d I}{d t}=\" + Tinc_s + \"E-\" + Tinf_s+ \"I, \\\\qquad \\\\frac{d R}{d t}=\" + Tinf_s+ \"I\", {\n    throwOnError: false,\n    displayMode: true,\n    colorIsTextColor: true\n  });\n\n  function math_inline(str) {\n    return katex.renderToString(str, {\n    throwOnError: false,\n    displayMode: false,\n    colorIsTextColor: true\n    });\n  }\n\n  function math_display(str) {\n    return katex.renderToString(str, {\n    throwOnError: false,\n    displayMode: true,\n    colorIsTextColor: true\n    });\n  }\n  \n  $: p_num_ind = 40\n\n  $: get_d = function(i){\n    return dIters(indexToTime(i), Iters[i])\n  }\n\n  function get_milestones(P){\n\n    function argmax(x, index) {\n      return x.map((x, i) => [x[index], i]).reduce((r, a) => (a[0] > r[0] ? a : r))[1];\n    }\n\n\t//    Dead                        ICU            Hospital       Recovered                    Sick           Infectious\n    var milestones = []\n    for (var i = 0; i < P.length; i++) {\n      if (P[i][0] >= 0.5) {\n        milestones.push([i*dt, \"First death\"])\n        break\n      }\n    }\n\n    var i = argmax(P, 2)\n    milestones.push([i*dt, \"</br>Peak hospital: \" + format(\",\")(Math.round(P[i][2]))])\n    var j = argmax(P, 1)\n    milestones.push([j*dt, \"Peak ICU: \" + format(\",\")(Math.round(P[j][1]))])\n\n    return milestones\n  }\n\n  $: milestones = get_milestones(P)\n  $: log = true\n\n</script>\n\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/katex.css\" integrity=\"sha384-bsHo4/LA+lkZv61JspMDQB9QP1TtO4IgOf2yYS+J6VdAYLVyx1c3XKcsHh0Vy8Ws\" crossorigin=\"anonymous\">\n\n<style>\n  .small { font: italic 6px Source Code Pro; }\n  @import url('https://fonts.googleapis.com/css?family=Source+Code+Pro&display=swap');\n\n\n  h2 {\n    margin: auto;\n    width: 950px;\n    font-size: 40px;\n    padding-top: 20px;\n    padding-bottom: 20px;\n    font-weight: 300;\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\n    padding-bottom: 30px\n  }\n\n  .center {\n    margin: auto;\n    width: 950px;\n    padding-bottom: 20px;\n    font-weight: 300;\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\n    color:#666;\n    font-size: 16.5px;\n    text-align: justify;\n    line-height: 24px\n  }\n\n  .ack {\n    margin: auto;\n    width: 950px;\n    padding-bottom: 20px;\n    font-weight: 300;\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\n    color:#333;\n    font-size: 13px;\n  }\n\n  .row {\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\n    margin: auto;\n    display: flex;\n    width: 948px;\n    font-size: 13px;\n  }\n\n  .caption {\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\n    font-size: 13px;    \n  }\n\n  .column {\n    flex: 158px;\n    padding: 0px 5px 5px 0px;\n    margin: 0px 5px 5px 5px;\n    /*border-top: 2px solid #999*/\n  }\n\n  .minorTitle {\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\n    margin: auto;\n    display: flex;\n    width: 950px;\n    font-size: 17px;\n    color: #666;\n  }\n\n  .minorTitleColumn{\n    flex: 60px;\n    padding: 3px;\n    border-bottom: 2px solid #999;\n  }\n\n\n  .paneltext{\n    position:relative;\n    height:130px;\n  }\n\n  .paneltitle{\n    color:#777; \n    line-height: 17px; \n    padding-bottom: 4px;\n    font-weight: 700;\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\n  }\n\n  .paneldesc{\n    color:#888; \n    text-align: left;\n    font-weight: 300;\n  }\n\n  .slidertext{\n    color:#555; \n    line-height: 7px; \n    padding-bottom: 0px; \n    padding-top: 7px;\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\n    font-family: 'Source Code Pro', monospace;\n    font-size: 10px;\n    text-align: right;\n    /*font-weight: bold*/\n  }\n    \n  .range {\n    width: 100%;\n  }\n\n  .chart {\n    width: 100%;\n    margin: 0 auto;\n    padding-top:0px;\n    padding-bottom:10px;\n  }\n\n  .legend {\n    color: #888;\n    font-family: Helvetica, Arial;\n    font-size: .725em;\n    font-weight: 200;\n    height: 100px;\n    left: 20px;\n    top: 4px;\n    position: absolute;\n  }\n\n  .legendtitle {\n    color:#777; \n    font-size:13px;\n    padding-bottom: 6px;\n    font-weight: 600;\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\n  }\n\n\n  .legendtext{\n    color:#888; \n    font-size:13px;\n    padding-bottom: 5px;\n    font-weight: 300;\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\n    line-height: 14px;\n  }\n\n  .legendtextnum{\n    color:#888; \n    font-size:13px;\n    padding-bottom: 5px;\n    font-weight: 300;\n    line-height: 12px;\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\n    left: -3px;\n    position: relative;\n  }\n\n  .tick {\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\n    font-size: .725em;\n    font-weight: 200;\n    font-size: 13px\n  }\n\n  td { \n    text-align: left;\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\n    border-bottom: 1px solid #DDD;\n    border-collapse: collapse;\n    padding: 3px;\n    /*font-size: 14px;*/\n  }\n\n  tr {\n    border-collapse: collapse;\n    border-spacing: 15px;\n  }\n\n  .eqn {\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\n    margin: auto;\n    display: flex;\n    flex-flow: row wrap;\n    width: 950px;\n    column-count: 4;\n    font-weight: 300;\n    color:#666;\n    font-size: 16.5px;\n  }\n\n  th { font-weight: 500; text-align: left; padding-bottom: 5px; vertical-align: text-top;     border-bottom: 1px solid #DDD; }\n\n  a:link { color: grey; }\n  a:visited { color: grey; }\n\n</style>\n\n<h2>Epidemic Calculator (adapted for {country})</h2>\n\n<div class=\"chart\" style=\"display: flex; max-width: 1120px\">\n\n  <div style=\"flex: 0 0 290px; width:270px;\">\n    <div style=\"position:relative; top:48px; right:-115px\">\n      <div class=\"legendtext\" style=\"position:absolute; left:-16px; top:-34px; width:50px; height: 100px; font-size: 13px; line-height:16px; font-weight: normal; text-align: center\"><b>Day</b><br> {Math.round(indexToTime(active_))}</div>\n\n      <!-- Susceptible -->\n      <div style=\"position:absolute; left:0px; top:0px; width: 180px; height: 100px\">\n\n        <span style=\"pointer-events: none\"><Checkbox color=\"#CCC\"/></span>\n        <Arrow height=\"41\"/>\n\n        <div class=\"legend\" style=\"position:absolute;\">\n          <div class=\"legendtitle\">Susceptible</div>\n          <div style=\"padding-top: 5px; padding-bottom: 1px\">\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:3px; color:#CCC\">∑</span> <i>{formatNumber(Math.round(N*Iters[active_][0]))} \n                                  ({ (100*Iters[active_][0]).toFixed(2) }%)</i></div>\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:2px; color:#CCC\">Δ</span> <i>{formatNumber(Math.round(N*get_d(active_)[0]))} / day</i>\n                                 </div>\n          </div>\n        </div>\n          <div class=\"legendtext\" style=\"text-align: right; width:105px; left:-111px; top: 4px; position:relative;\">Population not immune to disease</div>\n\n      </div>\n\n      <!-- Infectious -->\n      <div style=\"position:absolute; left:0px; top:{legendheight*1}px; width: 180px; height: 100px\">\n\n        <Checkbox color=\"{colors[5]}\" bind:checked={checked[5]}/>      \n        <Arrow height=\"41\"/>\n\n        <div class=\"legend\" style=\"position:absolute;\">\n          <div class=\"legendtitle\">Infectious</div>\n\n          <div style=\"padding-top: 5px; padding-bottom: 1px\">\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:3px; color:#CCC\">∑</span> <i>{formatNumber(Math.round(N*(Iters[active_][2]+Iters[active_][3])))} \n                                  ({ (100*(Iters[active_][2]+Iters[active_][3])).toFixed(2) }%)</div>\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:2px; color:#CCC\">Δ</span> <i>{formatNumber(Math.round(N*(get_d(active_)[2]+get_d(active_)[3]))) } / day</i>\n                                 </div>\n          </div>\n        </div>\n        <div class=\"legendtext\" style=\"text-align: right; width:105px; left:-111px; top: 4px; position:relative;\">People feeling fine but infecting others</div>\n\n      </div>\n\n      <!-- Sick -->\n      <div style=\"position:absolute; left:0px; top:{legendheight*2}px; width: 180px; height: 100px\">\n\n        <Checkbox color=\"{colors[4]}\" bind:checked={checked[4]}/>\n        <Arrow height=\"41\"/>   \n\n        <div class=\"legend\" style=\"position:absolute;\">\n          <div class=\"legendtitle\">Sick</div>\n          <div style=\"padding-top: 5px; padding-bottom: 1px\">\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:3px; color:#CCC\">∑</span> <i>{formatNumber(Math.round(N*(Iters[active_][4]+Iters[active_][5])))}\n                                  ({ (100*(Iters[active_][4]+Iters[active_][5])).toFixed(2) }%)</div>\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:2px; color:#CCC\">Δ</span> <i>{formatNumber(Math.round(N*(get_d(active_)[4]+get_d(active_)[5]))) } / day</i>\n                                 </div>\n          </div>\n        </div>\n        <div class=\"legendtext\" style=\"text-align: right; width:105px; left:-111px; top: 4px; position:relative;\">People feeling <i>sick</i></div>\n\n\n      </div>\n\n      <!-- Removed -->\n      <div style=\"position:absolute; left:0px; top:{legendheight*3}px; width: 180px; height: 100px\">\n\n        <Checkbox color=\"grey\" callback={(s) => {checked[0] = s; checked[1] = s; checked[2] = s; checked[3] = s} }/>\n        <Arrow height=\"56\" arrowhead=\"\" dasharray=\"3 2\"/>\n\n        <div class=\"legend\" style=\"position:absolute;\">\n          <div class=\"legendtitle\">Removed</div>\n          <div style=\"padding-top: 10px; padding-bottom: 1px\">\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:3px; color:#CCC\">∑</span> <i>{formatNumber(Math.round(N* (Iters[active_][10]+Iters[active_][11]+Iters[active_][1]+Iters[active_][12]+Iters[active_][13]+Iters[active_][14]+Iters[active_][15]+Iters[active_][16]+Iters[active_][17]) ))} \n                                  ({ ((100*(Iters[active_][10]+Iters[active_][11]+Iters[active_][12]+Iters[active_][13]+Iters[active_][14]+Iters[active_][15]+Iters[active_][16]+Iters[active_][17]))).toFixed(2) }%)</div>\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:2px; color:#CCC\">Δ</span> <i>{formatNumber(Math.round(N*(get_d(active_)[10]+get_d(active_)[11]+get_d(active_)[12]+get_d(active_)[13]+get_d(active_)[14]+get_d(active_)[15]+get_d(active_)[16]+get_d(active_)[17]) )) } / day</i>\n                                 </div>\n          </div>\n        </div>\n        <div class=\"legendtext\" style=\"text-align: right; width:105px; left:-111px; top: 4x; position:relative;\">Population no longer infectious due to isolation or immunity</div>\n\n      </div>\n\n      <!-- Recovered -->\n      <div style=\"position:absolute; left:0px; top:{legendheight*4+14-3}px; width: 180px; height: 100px\">\n        <Checkbox color=\"{colors[3]}\" bind:checked={checked[3]}/>\n        <Arrow height=\"23\" arrowhead=\"\" dasharray=\"3 2\"/>\n        <div class=\"legend\" style=\"position:absolute;\">\n          <div class=\"legendtitle\">Recovered</div>\n\n          <div style=\"padding-top: 3px; padding-bottom: 1px\">\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:3px; color:#CCC\">∑</span> <i>{formatNumber(Math.round(N*(Iters[active_][10]+Iters[active_][11]+Iters[active_][12]+Iters[active_][13]) ))} \n                                  ({ (100*(Iters[active_][10]+Iters[active_][11]+Iters[active_][12]+Iters[active_][13])).toFixed(2) }%)</div>\n          </div>\n        </div>\n        <div class=\"legendtext\" style=\"text-align: right; width:105px; left:-111px; top: 8px; position:relative;\">Full recoveries</div>\n\n      </div>\n\n      <!-- Hospitalized -->\n      <div style=\"position:absolute; left:0px; top:{legendheight*4+57}px; width: 180px; height: 100px\">\n        <Arrow height=\"43\" arrowhead=\"\" dasharray=\"3 2\"/>\n        <Checkbox color=\"{colors[2]}\" bind:checked={checked[2]}/>\n        <div class=\"legend\" style=\"position:absolute;\">\n          <div class=\"legendtitle\">Hospitalized</div>\n          <div style=\"padding-top: 3px; padding-bottom: 1px\">\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:3px; color:#CCC\">∑</span> <i>{formatNumber(Math.round(N*(Iters[active_][6]+Iters[active_][7]) ))} \n                                  ({ (100*(Iters[active_][6]+Iters[active_][7])).toFixed(2) }%)</div>\n          </div>\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:2px; color:#CCC\">Δ</span> <i>{formatNumber(Math.round(N*(get_d(active_)[6]+get_d(active_)[7]))) } / day</i>\n                                 </div>\n        </div>\n        <div class=\"legendtext\" style=\"text-align: right; width:105px; left:-111px; top: 10px; position:relative;\">Active hospitalizations</div>\n\n      </div>\n\n       <!-- ICU -->\n      <div style=\"position:absolute; left:0px; top:{legendheight*4+120+2}px; width: 180px; height: 100px\">\n        <Arrow height=\"43\" arrowhead=\"\" dasharray=\"3 2\"/>\n        <Checkbox color=\"{colors[1]}\" bind:checked={checked[1]}/>\n        <div class=\"legend\" style=\"position:absolute;\">\n          <div class=\"legendtitle\">ICU</div>\n          <div style=\"padding-top: 3px; padding-bottom: 1px\">\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:3px; color:#CCC\">∑</span> <i>{formatNumber(Math.round(N*(Iters[active_][8]+Iters[active_][9]) ))} \n                                  ({ (100*(Iters[active_][8]+Iters[active_][9])).toFixed(2) }%)</div>\n          </div>\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:2px; color:#CCC\">Δ</span> <i>{formatNumber(Math.round(N*(get_d(active_)[8]+get_d(active_)[9]))) } / day</i>\n                                 </div>\n        </div>\n        <div class=\"legendtext\" style=\"text-align: right; width:105px; left:-111px; top: 10px; position:relative;\">People in the Intensive Care Unit</div>\n\n      </div>\n\n      <div style=\"position:absolute; left:0px; top:{legendheight*4+120+2+63+2}px; width: 180px; height: 100px\">\n        <Arrow height=\"40\" arrowhead=\"\" dasharray=\"3 2\"/>\n\n        <Checkbox color=\"{colors[0]}\" bind:checked={checked[0]}/>\n\n        <div class=\"legend\" style=\"position:absolute;\">\n          <div class=\"legendtitle\">Fatalities</div>\n          <div style=\"padding-top: 3px; padding-bottom: 1px\">          \n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:3px; color:#CCC\">∑</span> <i>{formatNumber(Math.round(N*(Iters[active_][14]+Iters[active_][15]+Iters[active_][16]+Iters[active_][17])))} \n                                  ({ (100*(Iters[active_][14]+Iters[active_][15]+Iters[active_][16]+Iters[active_][17])).toFixed(2) }%)</div>\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:2px; color:#CCC\">Δ</span> <i>{formatNumber(Math.round(N*(get_d(active_)[14]+get_d(active_)[15]+get_d(active_)[16]+get_d(active_)[17]))) } / day</i>\n                                 </div>\n          </div>\n        </div>\n        <div class=\"legendtext\" style=\"text-align: right; width:105px; left:-111px; top: 10px; position:relative;\">Deaths</div>\n      </div>\n    </div>\n  </div>\n\n  <div style=\"flex: 0 0 890px; width:890px; height: {height+128+60}px; position:relative;\">\n\n    <div style=\"position:relative; top:60px; left: 10px\">\n      <Chart bind:checked={checked}\n             bind:active={active}\n             y = {P} \n             xmax = {Xmax} \n             total_infected = {total_infected} \n             deaths = {deaths} \n             total = {total} \n             timestep={timestep}\n             tmax={tmax}\n             N={N}\n             ymax={lock ? Plock: Pmax}\n             InterventionTime={InterventionTime}\n             colors={colors}\n             log={!log}/>\n      </div>\n\n      <div id=\"xAxisDrag\"\n           style=\"pointer-events: all;\n                  position: absolute;\n                  top:{height+80}px;\n                  left:{0}px;\n                  width:{780}px;\n                  background-color:#222;\n                  opacity: 0;\n                  height:25px;\n                  cursor:col-resize\">\n      </div>\n\n      <div id=\"yAxisDrag\"\n           style=\"pointer-events: all;\n                  position: absolute;\n                  top:{55}px;\n                  left:{0}px;\n                  width:{20}px;\n                  background-color:#222;\n                  opacity: 0;\n                  height:425px;\n                  cursor:row-resize\">\n      </div>\n\n      <!-- Intervention Line -->\n      <div style=\"position: absolute; width:{width+15}px; height: {height}px; position: absolute; top:100px; left:10px; pointer-events: none\">\n        <div id=\"dottedline\"  style=\"pointer-events: all;\n                    position: absolute;\n                    top:-38px;\n                    left:{xScaleTime(InterventionTime)}px;\n                    visibility: {(xScaleTime(InterventionTime) < (width - padding.right)) ? 'visible':'hidden'};\n                    width:2px;\n                    background-color:#FFF;\n                    border-right: 1px dashed black;\n                    pointer-events: all;\n                    cursor:col-resize;\n                    height:{height+19}px\">\n\n        <div style=\"position:absolute; opacity: 0.5; top:-5px; left:10px; width: 120px\">\n        <span style=\"font-size: 13px\">{@html math_inline(\"\\\\mathcal{R}_t=\" + (R0*InterventionAmt).toFixed(2) )}</span> ⟶ \n        </div>\n\n        {#if xScaleTime(InterventionTime) >= 100}\n          <div style=\"position:absolute; opacity: 0.5; top:-2px; left:-97px; width: 120px\">\n          <span style=\"font-size: 13px\">⟵ {@html math_inline(\"\\\\mathcal{R}_0=\" + (R0).toFixed(2) )}</span>\n          </div>      \n        {/if}\n\n        <div id=\"interventionDrag\" class=\"legendtext\" style=\"flex: 0 0 160px; width:120px; position:relative;  top:-70px; height: 60px; padding-right: 15px; left: -125px; pointer-events: all;cursor:col-resize;\" >\n          <div class=\"paneltitle\" style=\"top:9px; position: relative; text-align: right\">Intervention on day {format(\"d\")(InterventionTime)}</div>\n          <span></span><div style=\"top:9px; position: relative; text-align: right\">\n          (drag me)</div>\n          <div style=\"top:43px; left:40px; position: absolute; text-align: right; width: 20px; height:20px; opacity: 0.3\">\n            <svg width=\"20\" height=\"20\">\n              <g transform=\"rotate(90)\">\n                <g transform=\"translate(0,-20)\">\n                  <path d=\"M2 11h16v2H2zm0-4h16v2H2zm8 11l3-3H7l3 3zm0-16L7 5h6l-3-3z\"/>\n                 </g>  \n              </g>\n            </svg>\n          </div>\n        </div>\n\n\n        <div style=\"width:150px; position:relative; top:-85px; height: 80px; padding-right: 15px; left: 0px; ;cursor:col-resize; background-color: white; position:absolute\" >\n\n        </div>\n\n\n        </div>\n      </div>\n\n      <!-- Intervention Line slider -->\n      <div style=\"position: absolute; width:{width+15}px; height: {height}px; position: absolute; top:120px; left:10px; pointer-events: none\">\n        <div style=\"\n            position: absolute;\n            top:-38px;\n            left:{xScaleTime(InterventionTime)}px;\n            visibility: {(xScaleTime(InterventionTime) < (width - padding.right)) ? 'visible':'hidden'};\n            width:2px;\n            background-color:#FFF;\n            border-right: 1px dashed black;\n            cursor:col-resize;\n            height:{height}px\">\n            <div style=\"flex: 0 0 160px; width:200px; position:relative; top:-125px; left: 1px\" >\n              <div class=\"caption\" style=\"pointer-events: none; position: absolute; left:0; top:40px; width:150px; border-left: 2px solid #777; padding: 5px 7px 7px 7px; \">      \n              <div class=\"paneltext\"  style=\"height:20px; text-align: right\">\n              <div class=\"paneldesc\">to decrease transmission by<br></div>\n              </div>\n              <div style=\"pointer-events: all\">\n              <div class=\"slidertext\" on:mousedown={lock_yaxis}>{(100*(1-InterventionAmt)).toFixed(2)}%</div>\n              <input class=\"range\" type=range bind:value={OMInterventionAmt} min=0 max=1 step=0.01 on:mousedown={lock_yaxis}>\n              </div>\n              </div>\n            </div>\n          </div>\n      </div>\n\n      <div style=\"pointer-events: none;\n                  position: absolute;\n                  top:{height+84}px;\n                  left:{0}px;\n                  width:{780}px;\n                  opacity: 1.0;\n                  height:25px;\n                  cursor:col-resize\">\n            {#each milestones as milestone}\n              <div style=\"position:absolute; left: {xScaleTime(milestone[0])+8}px; top: -30px;\">\n                <span style=\"opacity: 0.3\"><Arrow height=30 arrowhead=\"#circle\" dasharray = \"2 1\"/></span>\n                  <div class=\"tick\" style=\"position: relative; left: 0px; top: 35px; max-width: 130px; color: #BBB; background-color: white; padding-left: 4px; padding-right: 4px\">{@html milestone[1]}</div>\n              </div>\n            {/each}\n      </div>\n    \n    <div style=\"opacity:{xScaleTime(InterventionTime) >= 192? 1.0 : 0.2}\">\n      <div class=\"tick\" style=\"color: #AAA; position:absolute; pointer-events:all; left:10px; top: 10px\">\n        <Checkbox color=\"#CCC\" bind:checked={log}/><div style=\"position: relative; top: 4px; left:20px\">linear scale</div>\n      </div>\n    </div>\n\n   </div>\n\n</div>\n\n\n\n<div style=\"height:290px;\">\n  <div class=\"minorTitle\">\n    <div style=\"margin: 0px 0px 5px 4px; width:420px\" class=\"minorTitleColumn\">Transmission Dynamics</div>\n    <div style=\"flex: 0 0 20; width:20px\"></div>\n    <div style=\"margin: 0px 4px 5px 0px\" class=\"minorTitleColumn\">Clinical Dynamics</div>\n  </div>\n  <div class = \"row\">\n\n    <div class=\"column\">\n      <div class=\"paneltitle\">Population Inputs</div>\n      <div class=\"paneldesc\" style=\"height:30px\">Size of population<br></div>\n      <div class=\"slidertext\">{format(\",\")(Math.round(N))}</div>\n      <input class=\"range\" style=\"margin-bottom: 8px\"type=range bind:value={logN} min={5} max=25 step=0.01>\n      <div class=\"paneldesc\" style=\"height:29px; border-top: 1px solid #EEE; padding-top: 10px\">Number of initial infections<br></div>\n      <div class=\"slidertext\">{I0}</div>\n      <input class=\"range\" type=range bind:value={I0} min={1} max=1000 step=1>\n    </div>\n\n    <div class=\"column\">\n      <div class=\"paneltext\">\n      <div class=\"paneltitle\">Basic Reproduction Number {@html math_inline(\"\\\\mathcal{R}_0\")} </div>\n      <div class=\"paneldesc\">Measure of contagiousness: number of new infections per infected <br></div>\n      </div>\n      <div class=\"slidertext\">{R0}</div>\n      <input class=\"range\" type=range bind:value={R0} min=0.01 max=10 step=0.01> \n      <div class=\"paneldesc\" style=\"height:29px; border-top: 1px solid #EEE; padding-top: 10px\">Days to being infectious<br></div>\n      <div class=\"slidertext\">{D_to_asym.toFixed(2)} Days</div>\n      <input class=\"range\" type=range bind:value={D_to_asym} min={0.1} max=30 step=0.1>      \n    </div> \n\n    <div class=\"column\">\n      <div class=\"paneltitle\">Incubation statistics</div>\n      <div class=\"paneldesc\" style=\"height:30px\">Probability of staying asympromatic<br></div>\n      <div class=\"slidertext\">{((1-P_symptoms)*100).toFixed(2)} %</div>\n      <input class=\"range\" style=\"margin-bottom: 8px\"type=range bind:value={P_symptoms} min=0 max=1 step=0.0001>\n      <div class=\"paneldesc\" style=\"height:29px; border-top: 1px solid #EEE; padding-top: 10px\">Days to first symptoms<br></div>\n      <div class=\"slidertext\">{(D_to_asym+D_to_symptoms).toFixed(2)} Days</div>\n      <input class=\"range\" type=range bind:value={D_to_symptoms} min={0.0} max=30 step=0.1>\n      <div class=\"paneldesc\" style=\"height:29px; border-top: 1px solid #EEE; padding-top: 10px\">Days to heal<br></div>\n      <div class=\"slidertext\">{D_recov_symptoms.toFixed(2)} Days</div>\n      <input class=\"range\" type=range bind:value={D_recov_symptoms} min={D_to_hospital * P_hospital / (1-P_hospital)} max=30 step=0.1>\n    </div>\n\n    <div class=\"column\">\n      <div class=\"paneltitle\">Progression statistics</div>\n      <div class=\"paneldesc\" style=\"height:30px\">Hospitalization probability<br></div>\n      <div class=\"slidertext\">{((P_hospital)*100).toFixed(2)} %</div>\n      <input class=\"range\" style=\"margin-bottom: 8px\"type=range bind:value={P_hospital} min=0 max=1 step=0.0001>\n      <div class=\"paneldesc\" style=\"height:29px; border-top: 1px solid #EEE; padding-top: 10px\">Days to get in hospital<br></div>\n      <div class=\"slidertext\">{D_to_hospital.toFixed(2)} Days</div>\n      <input class=\"range\" type=range bind:value={D_to_hospital} min={0.1} max=30 step=0.1>\n      <div class=\"paneldesc\" style=\"height:29px; border-top: 1px solid #EEE; padding-top: 10px\">Days to recover from hospital<br></div>\n      <div class=\"slidertext\">{D_recov_hospital.toFixed(2)} Days</div>\n      <input class=\"range\" type=range bind:value={D_recov_hospital} min={D_to_ICU * P_ICU / (1-P_ICU)} max=30 step=0.1>\n    </div>\n\n    <div class=\"column\">\n      <div class=\"paneltitle\">ICU statistics</div>\n      <div class=\"paneldesc\" style=\"height:30px\">ICU probability from hospital<br></div>\n      <div class=\"slidertext\">{((P_ICU)*100).toFixed(2)} %</div>\n      <input class=\"range\" style=\"margin-bottom: 8px\"type=range bind:value={P_ICU} min=0 max=1 step=0.0001>\n      <div class=\"paneldesc\" style=\"height:29px; border-top: 1px solid #EEE; padding-top: 10px\">Days to get in ICU<br></div>\n      <div class=\"slidertext\">{D_to_ICU.toFixed(2)} Days</div>\n      <input class=\"range\" type=range bind:value={D_to_ICU} min={0.1} max=30 step=0.1>\n      <div class=\"paneldesc\" style=\"height:29px; border-top: 1px solid #EEE; padding-top: 10px\">Days to recover from ICU<br></div>\n      <div class=\"slidertext\">{D_recov_ICU.toFixed(2)} Days</div>\n      <input class=\"range\" type=range bind:value={D_recov_ICU} min={D_to_death * P_die_in_ICU / (1-P_die_in_ICU)} max=30 step=0.1>\n    </div>\n\n    <div class=\"column\">\n      <div class=\"paneltitle\">Mortality</div>\n      <div class=\"paneldesc\" style=\"height:30px\">Probability to die in ICU<br></div>\n      <div class=\"slidertext\">{((P_die_in_ICU)*100).toFixed(2)} %</div>\n      <input class=\"range\" style=\"margin-bottom: 8px\"type=range bind:value={P_die_in_ICU} min=0 max=1 step=0.0001>\n      <div class=\"paneldesc\" style=\"height:29px; border-top: 1px solid #EEE; padding-top: 10px\">Days to die in ICU<br></div>\n      <div class=\"slidertext\">{D_to_death.toFixed(2)} Days</div>\n      <input class=\"range\" type=range bind:value={D_to_death} min={0.1} max=30 step=0.1>\n      <div class=\"paneldesc\" style=\"height:29px; border-top: 1px solid #EEE; padding-top: 10px\">ICU beds per 100,000 inhabitants<br></div>\n      <div class=\"slidertext\">{N_ICU.toFixed(2)} beds</div>\n      <input class=\"range\" type=range bind:value={N_ICU} min={0.0} max=50 step=0.1>\n    </div>\n\n  </div>\n</div>\n\n<div style=\"position: relative; height: 12px\"></div>\n\n<p class = \"center\">\nAt the time of writing, the coronavirus disease of 2019 remains a global health crisis of grave and uncertain magnitude. To the non-expert (such as myself), contextualizing the numbers, forecasts and epidemiological parameters described in the media and literature can be challenging. I created this calculator as an attempt to address this gap in understanding.\n</p>\n\n<p class = \"center\">\nA sampling of the estimates for epidemic parameters are presented below:\n</p>\n\n<div class=\"center\">\n<table style=\"width:100%; margin:auto; font-weight: 300; border-spacing: inherit\">\n  <tr>\n    <th></th>\n    <th>Location</th>\n    <th>Reproduction Number<br> {@html math_inline(\"\\\\mathcal{R}_0\")}</th>\n    <th>Incubation Period<br> {@html math_inline(\"T_{\\\\text{inc}}\")} (in days)</th>\n    <th>Infectious Period<br> {@html math_inline(\"T_{\\\\text{inf}}\")} (in days)</th>\n  </tr>\n  <tr>\n    <td width=\"27%\"><a href = \"https://cmmid.github.io/topics/covid19/current-patterns-transmission/wuhan-early-dynamics.html\">Kucharski et. al</a></td>\n    <td>Wuhan </td>    \n    <td>3.0 (1.5 — 4.5)</td>\n    <td>5.2</td>\n    <td>2.9</td>\n  </tr>\n  <tr>\n    <td><a href = \"https://www.nejm.org/doi/full/10.1056/NEJMoa2001316\">Li, Leung and Leung</a></td>\n    <td>Wuhan </td>    \n    <td>2.2 (1.4 — 3.9)</td>\n    <td>5.2 (4.1 — 7.0)</td>\n    <td>2.3 (0.0 — 14.9)</td>\n  </tr>\n  <tr>\n    <td><a href = \"https://www.thelancet.com/journals/lancet/article/PIIS0140-6736(20)30260-9/fulltext\">Wu et. al</a></td>\n    <td>Greater Wuhan </td>    \n    <td>2.68 (2.47 — 2.86)</td>\n    <td>6.1</td>\n    <td>2.3</td>\n  </tr>\n  <tr>\n    <td><a href = \"https://www.who.int/news-room/detail/23-01-2020-statement-on-the-meeting-of-the-international-health-regulations-(2005)-emergency-committee-regarding-the-outbreak-of-novel-coronavirus-(2019-ncov)\">WHO Initial Estimate</a></td>\n    <td>Hubei </td>    \n    <td>1.95 (1.4 — 2.5)</td>\n    <td></td>\n    <td></td>\n  </tr>\n  <tr>\n    <td><a href = \"https://www.who.int/docs/default-source/coronaviruse/who-china-joint-mission-on-covid-19-final-report.pdf\">WHO-China Joint Mission </a></td>\n    <td>Hubei </td>    \n    <td>2.25 (2.0 — 2.5)</td>\n    <td>5.5 (5.0 - 6.0)</td>\n    <td></td>\n  </tr>\n  <tr>\n    <td><a href = \"https://www.biorxiv.org/content/10.1101/2020.01.25.919787v2\">Liu et. al </a></td>\n    <td>Guangdong</td>\n    <td>4.5 (4.4 — 4.6)</td>\n    <td>4.8 (2.2 — 7.4) </td>\n    <td>2.9 (0 — 5.9)</td>\n  </tr>\n  <tr>\n    <td><a href = \"https://academic.oup.com/jtm/advance-article/doi/10.1093/jtm/taaa030/5766334\">Rocklöv, Sjödin and Wilder-Smith</a></td>\n    <td>Princess Diamond</td>\n    <td>14.8</td>\n    <td>5.0</td>\n    <td>10.0</td>\n  </tr>\n  <tr>\n    <td><a href = \"https://www.eurosurveillance.org/content/10.2807/1560-7917.ES.2020.25.5.2000062\">Backer, Klinkenberg, Wallinga</a></td>\n    <td>Wuhan</td>\n    <td></td>\n    <td>6.5 (5.6 — 7.9)</td>\n    <td></td>\n  </tr>\n  <tr>\n    <td><a href = \"https://www.medrxiv.org/content/10.1101/2020.01.23.20018549v2.article-info\">Read et. al</a></td>\n    <td>Wuhan</td>\n    <td>3.11 (2.39 — 4.13)</td>\n    <td></td>\n    <td></td>\n  </tr>\n  <tr>\n    <td><a href = \"https://www.medrxiv.org/content/10.1101/2020.03.03.20028423v1\">Bi et. al</a></td>\n    <td>Shenzhen</td>\n    <td></td>\n    <td>4.8 (4.2 — 5.4)</td>\n    <td>1.5 (0 — 3.4)</td>\n    <td></td>\n  </tr>\n\n  <tr>\n    <td><a href = \"https://www.mdpi.com/2077-0383/9/2/462\">Tang et. al</a></td>\n    <td>China</td>\n    <td>6.47 (5.71 — 7.23)</td>\n    <td></td>\n    <td></td>\n  </tr>\n\n</table>\n</div>\n\n\n<p class=\"center\">\nSee [<a href=\"https://academic.oup.com/jtm/advance-article/doi/10.1093/jtm/taaa021/5735319\">Liu et. al</a>] detailed survey of current estimates of the reproduction number. Parameters for the diseases' clinical characteristics are taken from the following <a href=\"https://www.who.int/docs/default-source/coronaviruse/who-china-joint-mission-on-covid-19-final-report.pdf\">WHO Report</a>. \n</p>\n\n\n<p class = \"center\">\n<b> Model Details </b><br>\nThe clinical dynamics in this model are an elaboration on SEIR that simulates the disease's progression at a higher resolution, subdividing {@html math_inline(\"I,R\")} into asymptomatic, symptomatic, hospitalized and patients in an ICU. Each of these variables follows its own trajectory to the final outcome, and the sum of these compartments add up to the values predicted by SEIR. Please refer to the source code for details. Note that we assume, for simplicity, that all fatalities come from ICU's, and that all fatal cases are admitted to hospitals.\n</p>\n\n<p class = \"center\">\n<b> Acknowledgements </b><br>\n<a href = \"https://gabgoh.github.io/\">Gabriel Goh</a> for the original version. \n<a href = \"https://enkimute.github.io/\">Steven De Keninck</a> for RK4 Integrator. <a href=\"https://twitter.com/ch402\">Chris Olah</a>, <a href=\"https://twitter.com/shancarter\">Shan Carter\n</a> and <a href=\"https://twitter.com/ludwigschubert\">Ludwig Schubert\n</a> wonderful feedback. <a href=\"https://twitter.com/NikitaJer\">Nikita Jerschov</a> for improving clarity of text. Charie Huang for context and discussion.\n</p>\n\n<!-- Input data -->\n<div style=\"margin-bottom: 30px\">\n\n  <div class=\"center\" style=\"padding: 10px; margin-top: 3px; width: 925px\">\n    <div class=\"legendtext\">Export parameters:</div>\n    <form>\n      <textarea type=\"textarea\" rows=\"1\" cols=\"5000\" style=\"white-space: nowrap;  overflow: auto; width:100%; text-align: left\" id=\"fname\" name=\"fname\">{state}</textarea>\n    </form>\n  </div>\n</div>\n",
    "<script>\n  import { scaleLinear, scaleLog } from 'd3-scale';\n  import { drag } from 'd3-drag';\n  import { selectAll } from 'd3-selection'\n  import { onMount } from 'svelte';\n  import { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  function range(n){\n    return Array(n).fill().map((_, i) => i);\n  }\n\n  $: showTip = function (i) {\n    active_hover = i\n  }\n\n  function formatNumber(num) {\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n  }\n\n  var sum = function(arr, bools){\n    var x = 0\n    for (var i = 0; i < arr.length; i++) {\n      x = x + arr[i]*(bools[i] ? 1 : 0)\n    }\n    return x\n  }\n\n  export let y;\n  export let tmax;\n  export let xmax; \n  export let deaths;\n  export let total;\n  export let vline;\n  export let timestep;\n  export let total_infected;\n  export let N;\n  export let ymax;\n  export let InterventionTime;\n  export let colors; \n  export let log = false;\n\n  const padding = { top: 20, right: 0, bottom: 20, left: 25 };\n\n  let width  = 750;\n  let height = 420;\n\n  $: xScale = scaleLinear()\n    .domain([0, y.length])\n    .range([padding.left, width - padding.right]);\n\n  $: xScaleTime = scaleLinear()\n    .domain([0, tmax])\n    .range([padding.left, width - padding.right]);\n\n  $: indexToTime = scaleLinear()\n    .domain([0, y.length])\n    .range([0, tmax])\n\n  $: timeToIndex = scaleLinear()\n    .domain([0, tmax])\n    .range([0, y.length])\n\n  $: yScale = (log ? scaleLog(): scaleLinear())\n    .domain([log ? 1: 0,  ymax/1])\n    .range([height - padding.bottom, padding.top]);\n\n  $: yScaleL = scaleLog()\n    .domain([1,  ymax/1])\n    .range([0, height - padding.bottom - padding.top]);\n\n\n  $: innerWidth = width - (padding.left + padding.right);\n  $: barWidth = innerWidth / y.length - 1.5;\n  $: active_hover = -1\n  $: lock = false\n  var active_lock = 0\n\n  $: active = (function () {\n    if (lock){\n      var i = Math.round(timeToIndex(active_lock))\n      if (i > 99) {\n        lock = false\n        i = 0\n      } else {\n        return i\n      }\n    } else {\n      return active_hover\n    }\n  })()\n  export let active;\n  export let checked;\n\n  // var data = [[2   , 2  ], [5   , 2  ], [18  , 4  ], [28  , 6  ], [43  , 8  ], [61  , 12 ], [95  , 16 ], [139 , 19 ], [245 , 26 ], [388 , 34 ], [593 , 43 ], [978 , 54 ], [1501, 66 ], [2336, 77 ], [2922, 92 ], [3513, 107], [4747, 124]]\n  var data = []\n</script>\n\n<style>\n  h2 {\n    text-align: center;\n    font-size: 30px;\n    font-weight: 300;\n    font-family: nyt-franklin,arial,helvetica,sans-serif;\n    font-style: normal; \n  }\n\n  .chart {\n    width: 100%;\n    max-width: 800px;\n    margin: 0 auto;\n    padding-top:30px;\n    padding-bottom:10px;\n  }\n\n  svg {\n    position: relative;\n    width: 100%;\n    height: 450px;\n  }\n\n  .tick {\n    font-family: Helvetica, Arial;\n    font-size: .725em;\n    font-weight: 200;\n  }\n\n  .tick line {\n    stroke: #e2e2e2;\n    stroke-dasharray: 2;\n  }\n\n  .tick text {\n    fill: #aaa;\n    text-anchor: start;\n  }\n\n  .tick.tick-0 line {\n    stroke-dasharray: 0;\n  }\n\n  .intervention line {\n    stroke: #555;\n    stroke-dasharray: 0;\n    stroke-width:12.5;\n  }\n\n\n  .x-axis .tick text {\n    text-anchor: middle;\n  }\n\n  .bar {\n    stroke: none;\n    opacity: 0.65\n  }\n\n  .total {\n    color: #888;\n    font-family: Helvetica, Arial;\n    font-size: .725em;\n    font-weight: 200;\n  }\n\n\n  a.tip span:before{\n      content:'';\n      display:block;\n      width:0;\n      height:0;\n      position:absolute;\n\n      border-top: 8px solid transparent;\n      border-bottom: 8px solid transparent;\n      border-right:8px solid black;\n      left:-8px;\n\n      top:7px;\n  }\n\n</style>\n\n<div style=\"width:{width+15}px; height: {height}px; position: relative; top:20px\">\n  <svg style=\"position:absolute; height: {height}px\">\n\n    <!-- y axis -->\n    <g class=\"axis y-axis\" transform=\"translate(0,{padding.top})\">\n      {#each yScale.ticks(5) as tick}\n        <g class=\"tick tick-{tick}\" transform=\"translate(0, {yScale(tick) - padding.bottom})\">\n          <line x2=\"100%\"></line>\n          <text y=\"-4\">{Number.isInteger(Math.log10(tick)) ? formatNumber(tick) : (log ? \"\": formatNumber(tick))}{ (tick == yScale.ticks(5)[0]) ? \" \": \"\"}</text>\n        </g>\n      {/each}\n    </g>\n\n    <!-- x axis -->\n    <g class=\"axis x-axis\">\n      {#each xScaleTime.ticks() as i}\n        <g class=\"tick\" transform=\"translate({xScaleTime(i)},{height})\">\n          <text x=\"0\" y=\"-4\">{i == 0 ? \"Day \":\"\"}{i}</text>\n        </g>\n      {/each}\n    </g>\n\n    <g class='bars'>\n      {#each range(y.length) as i}\n        <rect\n          on:mouseover={() => showTip(i)}\n          on:mouseout={() => showTip(-1)}\n          on:click={() => {lock = !lock; active_lock = indexToTime(i) }}\n          class=\"bar\"\n          x=\"{xScale(i) + 2}\"\n          y=\"{0}\"\n          width=\"{barWidth+3}\"\n          height=\"{height}\"\n          style=\"fill:white; opacity: 0\">     \n        </rect>\n\n        {#each range(colors.length) as j}\n          {#if !log}\n              <rect\n                on:mouseover={() => showTip(i)}\n                on:mouseout={() => showTip(-1)}\n                on:click={() => {lock = !lock; active_lock = indexToTime(i) }}\n                class=\"bar\"\n                x=\"{xScale(i) + 2}\"\n                y=\"{yScale( sum(y[i].slice(0,j+1), checked) )}\"\n                width=\"{barWidth}\"\n                height=\"{Math.max(height - padding.bottom - yScale(y[i][j]*checked[j] ),0)}\" \n                style=\"fill:{colors[j]};\n                       opacity:{active == i ? 0.9: 0.6}\">     \n              </rect>\n          {:else}\n              <rect\n                on:mouseover={() => showTip(i)}\n                on:mouseout={() => showTip(-1)}\n                on:click={() => {lock = !lock; active_lock = indexToTime(i) }}\n                class=\"bar\"\n                x=\"{xScale(i) + 2}\"\n                y=\"{(function () { \n                        var z = yScale( sum(y[i].slice(0,j+1), checked) ); \n                        return Math.min(isNaN(z) ? 0: z, height - padding.top)\n                      })()  \n                    }\"\n                width=\"{barWidth}\"\n                height=\"{(function () {\n                  var top = yScaleL( sum(y[i].slice(0,j+1),checked) + 0.0001 )\n                  var btm = yScaleL( sum(y[i].slice(0,j),checked) + 0.0001)\n                  var z = top - btm; \n                  if (z + yScale( sum(y[i].slice(0,j+1), checked) ) > height - padding.top) {\n                    return top\n                  } else {\n                    return Math.max(isNaN(z) ? 0 : z,0)\n                  }})()}\" \n                style=\"fill:{colors[j]};\n                       opacity:{active == i ? 0.9: 0.6}\">     \n              </rect>\n          {/if}\n        {/each}\n\n      {/each}\n    </g>\n\n<!-- height=\"{Math.max(height - padding.bottom - yScale(y[i][j]*checked[j] ),0)}\" -->\n\n    <g class='bars'>\n      {#each range(data.length) as i}\n        <rect\n          class=\"bar\"\n          x=\"{xScale( i+28 ) + 2}\"\n          y=\"{yScale( data[i][1] )}\"\n          width=\"{barWidth}\"\n          height=\"{height - padding.bottom - yScale( data[i][1] )}\"\n          style=\"fill:black; \n                 opacity: 0.5;\n                 box-shadow: 4px 10px 5px 2px rgba(0,0,0,0.75);\">     \n        </rect>\n      {/each}\n    </g>\n\n  </svg> \n\n  <div style=\"position: absolute;width:{width+15}px; height: {height}px; position: absolute; top:0px; left:0px; pointer-events: none\">\n    \n    {#if active >= 0}\n      <div style=\"position:absolute; \n                  pointer-events: none;\n                  width:100px;\n                  left:{xScale(active)}px;\n                  top:{Math.max(yScale(sum(y[active], checked)),0) }px\" class=\"tip\"> \n          <!-- {#if lock} <div style=\"position:absolute; top:-35px; left:-3.5px; font-family: Source Code Pro\">🔒</div> {/if} -->\n          <svg style=\"position:absolute; top:-12px; left:0px\" height=\"10\" width=\"10\">\n          <path \n            d=\"M 0 0 L 10 0 L 5 10 z\"\n            fill=\"{lock ? '#555':'#AAA'}\" \n            stroke-width=\"3\" />\n          </svg>\n      </div>\n    {/if}\n\n  </div>\n\n</div>\n"
  ],
  "names": [],
  "mappings": "AA+gBE,QAAQ,IAAI,sEAAsE,CAAC,CAAC,AAGpF,EAAE,eAAC,CAAC,AACF,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,KAAK,CACZ,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,CACjB,cAAc,CAAE,IAAI,CACpB,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CACpD,cAAc,CAAE,IAAI;EACtB,CAAC,AAED,OAAO,eAAC,CAAC,AACP,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,KAAK,CACZ,cAAc,CAAE,IAAI,CACpB,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CACpD,MAAM,IAAI,CACV,SAAS,CAAE,MAAM,CACjB,UAAU,CAAE,OAAO,CACnB,WAAW,CAAE,IAAI;EACnB,CAAC,AAYD,IAAI,eAAC,CAAC,AACJ,WAAW,CAAE,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CACpD,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,KAAK,CACZ,SAAS,CAAE,IAAI,AACjB,CAAC,AAED,QAAQ,eAAC,CAAC,AACR,WAAW,CAAE,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CACpD,SAAS,CAAE,IAAI,AACjB,CAAC,AAED,OAAO,eAAC,CAAC,AACP,IAAI,CAAE,KAAK,CACX,OAAO,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CACxB,MAAM,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,AAEzB,CAAC,AAED,WAAW,eAAC,CAAC,AACX,WAAW,CAAE,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CACpD,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,KAAK,CACZ,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,IAAI,AACb,CAAC,AAED,gCAAiB,CAAC,AAChB,IAAI,CAAE,IAAI,CACV,OAAO,CAAE,GAAG,CACZ,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,AAC/B,CAAC,AAGD,yBAAU,CAAC,AACT,SAAS,QAAQ,CACjB,OAAO,KAAK,AACd,CAAC,AAED,0BAAW,CAAC,AACV,MAAM,IAAI,CACV,WAAW,CAAE,IAAI,CACjB,cAAc,CAAE,GAAG,CACnB,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,AACtD,CAAC,AAED,yBAAU,CAAC,AACT,MAAM,IAAI,CACV,UAAU,CAAE,IAAI,CAChB,WAAW,CAAE,GAAG,AAClB,CAAC,AAED,0BAAW,CAAC,AACV,MAAM,IAAI,CACV,WAAW,CAAE,GAAG,CAChB,cAAc,CAAE,GAAG,CACnB,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CACpD,WAAW,CAAE,iBAAiB,CAAC,CAAC,SAAS,CACzC,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,KAAK,AAEnB,CAAC,AAED,MAAM,eAAC,CAAC,AACN,KAAK,CAAE,IAAI,AACb,CAAC,AAED,MAAM,eAAC,CAAC,AACN,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,YAAY,GAAG,CACf,eAAe,IAAI,AACrB,CAAC,AAED,OAAO,eAAC,CAAC,AACP,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,SAAS,CAAC,CAAC,KAAK,CAC7B,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,GAAG,CAChB,MAAM,CAAE,KAAK,CACb,IAAI,CAAE,IAAI,CACV,GAAG,CAAE,GAAG,CACR,QAAQ,CAAE,QAAQ,AACpB,CAAC,AAED,YAAY,eAAC,CAAC,AACZ,MAAM,IAAI,CACV,UAAU,IAAI,CACd,cAAc,CAAE,GAAG,CACnB,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,AACtD,CAAC,AAGD,0BAAW,CAAC,AACV,MAAM,IAAI,CACV,UAAU,IAAI,CACd,cAAc,CAAE,GAAG,CACnB,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CACpD,WAAW,CAAE,IAAI,AACnB,CAAC,AAED,6BAAc,CAAC,AACb,MAAM,IAAI,CACV,UAAU,IAAI,CACd,cAAc,CAAE,GAAG,CACnB,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,IAAI,CACjB,WAAW,CAAE,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CACpD,IAAI,CAAE,IAAI,CACV,QAAQ,CAAE,QAAQ,AACpB,CAAC,AAED,KAAK,eAAC,CAAC,AACL,WAAW,CAAE,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CACpD,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,GAAG,CAChB,SAAS,CAAE,IAAI;EACjB,CAAC,AAED,EAAE,eAAC,CAAC,AACF,UAAU,CAAE,IAAI,CAChB,WAAW,CAAE,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CACpD,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAC7B,eAAe,CAAE,QAAQ,CACzB,OAAO,CAAE,GAAG,AAEd,CAAC,AAED,EAAE,eAAC,CAAC,AACF,eAAe,CAAE,QAAQ,CACzB,cAAc,CAAE,IAAI,AACtB,CAAC,AAcD,EAAE,eAAC,CAAC,AAAC,WAAW,CAAE,GAAG,CAAE,UAAU,CAAE,IAAI,CAAE,cAAc,CAAE,GAAG,CAAE,cAAc,CAAE,QAAQ,CAAM,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,AAAE,CAAC,AAE5H,gBAAC,KAAK,AAAC,CAAC,AAAC,KAAK,CAAE,IAAI,AAAE,CAAC,AACvB,gBAAC,QAAQ,AAAC,CAAC,AAAC,KAAK,CAAE,IAAI,AAAE,CAAC;ACjmB1B,MAAM,eAAC,CAAC,AACN,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,YAAY,IAAI,CAChB,eAAe,IAAI,AACrB,CAAC,AAED,GAAG,eAAC,CAAC,AACH,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,KAAK,AACf,CAAC,AAED,KAAK,eAAC,CAAC,AACL,WAAW,CAAE,SAAS,CAAC,CAAC,KAAK,CAC7B,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,GAAG,AAClB,CAAC,AAED,oBAAK,CAAC,IAAI,eAAC,CAAC,AACV,MAAM,CAAE,OAAO,CACf,gBAAgB,CAAE,CAAC,AACrB,CAAC,AAED,oBAAK,CAAC,IAAI,eAAC,CAAC,AACV,IAAI,CAAE,IAAI,CACV,WAAW,CAAE,KAAK,AACpB,CAAC,AAED,KAAK,sBAAO,CAAC,IAAI,eAAC,CAAC,AACjB,gBAAgB,CAAE,CAAC,AACrB,CAAC,AAED,4BAAa,CAAC,IAAI,eAAC,CAAC,AAClB,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,CAAC,CACnB,aAAa,IAAI,AACnB,CAAC,AAGD,sBAAO,CAAC,KAAK,CAAC,IAAI,eAAC,CAAC,AAClB,WAAW,CAAE,MAAM,AACrB,CAAC,AAED,IAAI,eAAC,CAAC,AACJ,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI;EACf,CAAC,AAED,MAAM,eAAC,CAAC,AACN,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,SAAS,CAAC,CAAC,KAAK,CAC7B,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,GAAG,AAClB,CAAC"
}